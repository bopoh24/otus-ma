# Default values for app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

appConfig:
  name: Service booking
  logLevel: debug

# Microservices configuration block (enabled by default)
customerService:
  enabled: true
  replicaCount: 1
  image:
    repository: bopoh24/booksvc-customer
    pullPolicy: Always
    tag: latest
  service:
    type: NodePort
    port: 80
  autoscaling: {}

companyService:
  enabled: true
  replicaCount: 1
  image:
    repository: bopoh24/booksvc-company
    pullPolicy: Always
    tag: latest
  service:
    type: NodePort
    port: 80
  autoscaling: {}

bookingService:
  enabled: true
  replicaCount: 1
  image:
    repository: bopoh24/booksvc-booking
    pullPolicy: Always
    tag: latest
  service:
    type: NodePort
    port: 80
  autoscaling: {}

paymentService:
  enabled: false
  replicaCount: 1
  image:
    repository: bopoh24/booksvc-payment
    pullPolicy: Always
    tag: latest
  service:
    type: NodePort
    port: 80
  autoscaling: {}

notificationService:
  enabled: false
  replicaCount: 1
  image:
    repository: bopoh24/booksvc-notification
    pullPolicy: Always
    tag: latest
  service:
    type: NodePort
    port: 80
  autoscaling: {}


# Persistent volume configuration block (enabled by default)
pv:
  enabled: true
  name: postgres-pv
  size: 2Gi
  storageClass: standard
  path: /data/pv_app_postgres
  accessModes:
    - ReadWriteOnce

# Metrics configuration block (enabled by default)
metrics:
  serviceMonitor:
    enabled: true


postgresql:
  enabled: true
  global:
    postgresql:
      auth:
        database: postgres
        existingSecret: secret
        secretKeys:
          adminPasswordKey: dbPassword
          userPasswordKey: dbPassword
          replicationPasswordKey: dbPassword

  primary:
    initdb:
      scripts:
        01-init.sql: |
          CREATE DATABASE "keycloak" WITH OWNER postgres;
          CREATE DATABASE "customer" WITH OWNER postgres;
          CREATE DATABASE "company" WITH OWNER postgres;
          CREATE DATABASE "booking" WITH OWNER postgres;
          CREATE DATABASE "payment" WITH OWNER postgres;
    persistence:
      existingClaim: postgres-pvc

  volumePermissions:
    enabled: true

  metrics:
    enabled: true
    image:
      tag: 0.14.0
    serviceMonitor:
      enabled: true


keycloak:
  # customer client credentials
  customerRealm: customer
  customerClientId: customer-client
  customerClientSecret: wP1BRYU6NvL5WzXuaodeU8KTsQh5bMw0

  # company client credentials
  companyRealm: company
  companyClientId: company-client
  companyClientSecret: GJjUP9kYjF3FG6lSWDXRHN03qEGFTxjr

  auth:
    adminUser: admin
    adminPassword: admin

  extraEnvVars:
    - name: KEYCLOAK_EXTRA_ARGS
      value: "--import-realm"

  extraVolumeMounts:
    - name: config
      mountPath: /opt/bitnami/keycloak/data/import
      readOnly: true

  extraVolumes:
    - name: config
      configMap:
        name: keycloak-configmap
        items:
          - key: "customer_realm.json"
            path: "customer_realm.json"
          - key: "company_realm.json"
            path: "company_realm.json"

  postgresql:
    enabled: false

  externalDatabase:
    port: 5432
    database: keycloak
    existingSecret: secret
    existingSecretHostKey: dbHost
    existingSecretUserKey: dbUsername
    existingSecretPasswordKey: dbPassword

  ingress:
    enabled: true
    ingressClassName: nginx
    hostname: auth.booksvc.com


krakend:
    enabled: true
    #krakend: # TODO: add krakend config now it passed in helm command
    #  configFileSource: ../config/krakend/krakend.json
    ingress:
        enabled: true
        className: nginx
        hosts:
        - host: booksvc.com
          paths:
          - path: /
            pathType: ImplementationSpecific

kube-prometheus-stack:
  enabled: false
  prometheus:
    prometheusSpec:
      serviceMonitorSelectorNilUsesHelmValues: false
