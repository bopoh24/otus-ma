{
	"info": {
		"_postman_id": "2584305e-92c8-4954-90af-791de6cf68b8",
		"name": "HW_5",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "3360772",
		"_collection_link": "https://www.postman.com/bopoh24/workspace/otus-ma/collection/3360772-2584305e-92c8-4954-90af-791de6cf68b8?action=share&source=collection_link&creator=3360772"
	},
	"item": [
		{
			"name": "Register user 1 [/v1/register]",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {",
							"  pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"user1_email\", pm.variables.replaceIn(\"{{$randomEmail}}\"));",
							"pm.collectionVariables.set(\"user1_password\", pm.variables.replaceIn(\"{{$randomPassword}}\"));",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"{{user1_email}}\",\n    \"password\": \"{{user1_password}}\",\n    \"firstName\": \"{{$randomFirstName}}\",\n    \"lastName\": \"{{$randomLastName}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/v1/register",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v1",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get user profile without auth [/v1/users/me]",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401\", () => {",
							"  pm.response.to.have.status(401);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/v1/users/me",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v1",
						"users",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update user profile without auth [/v1/users/me]",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401\", () => {",
							"  pm.response.to.have.status(401);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"{{$randomUserName}}\",\n    \"firstName\": \"{{$randomFirstName}}\",\n    \"LastName\": \"{{$randomLastName}}\",\n    \"phone\": \"{{$randomPhoneNumber}}\",\n    \"description\": \"{{$randomJobDescriptor}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/v1/users/me",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v1",
						"users",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login user 1 [/v1/login]",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"pm.test(\"Access token present\", function () {",
							"    pm.expect(jsonData.access_token).exist",
							"});",
							"pm.collectionVariables.set(\"user1_access_token\", jsonData.access_token);",
							"pm.collectionVariables.set(\"user1_refresh_token\", jsonData.refresh_token);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"{{user1_email}}\",\n    \"password\": \"{{user1_password}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/v1/login",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v1",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update user 1 profile [/v1/users/me]",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Changes applyed\", () => {",
							"    pm.expect(jsonData.username).equal(pm.collectionVariables.get(\"user1_username\"));",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"user1_username\", pm.variables.replaceIn(\"{{$randomUserName}}\"));",
							"pm.collectionVariables.set(\"user1_firstName\", pm.variables.replaceIn(\"{{$randomFirstName}}\"));",
							"pm.collectionVariables.set(\"user1_lastName\", pm.variables.replaceIn(\"{{$randomLastName}}\"));",
							"pm.collectionVariables.set(\"user1_phone\", pm.variables.replaceIn(\"{{$randomPhoneNumber}}\"));",
							"pm.collectionVariables.set(\"user1_description\",pm.variables.replaceIn(\"{{$randomJobDescriptor}}\"));",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{user1_access_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"{{user1_username}}\",\n    \"firstName\": \"{{user1_firstName}}\",\n    \"lastName\": \"{{user1_lastName}}\",\n    \"phone\": \"{{user1_phone}}\",\n    \"description\": \"{{user1_description}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/v1/users/me",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v1",
						"users",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get user 1 profile [/v1/users/me]",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Email is the same\", ()=> {",
							"    pm.expect(jsonData.email).equal(pm.collectionVariables.get(\"user1_email\").toLowerCase());",
							"});",
							"pm.test(\"External ID is not null\", () => {",
							"    pm.expect(jsonData.externalId).exist.not.empty;",
							"})",
							"",
							"pm.test(\"Profile data updated correct\", ()=> {",
							"    pm.expect(jsonData.username).equal(pm.collectionVariables.get(\"user1_username\"));",
							"    pm.expect(jsonData.firstName).equal(pm.collectionVariables.get(\"user1_firstName\"));",
							"    pm.expect(jsonData.lastName).equal(pm.collectionVariables.get(\"user1_lastName\"));",
							"    pm.expect(jsonData.phone).equal(pm.collectionVariables.get(\"user1_phone\"));",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
						"key": "Authorization",
						"value": "Bearer {{user1_access_token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{baseUrl}}/v1/users/me",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v1",
						"users",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "Logout user 1 [v1/logout]",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", () => {",
							"  pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"refreshToken\": \"{{user1_refresh_token}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/v1/logout",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v1",
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register user 2 [/v1/register]",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {",
							"  pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"user2_email\", pm.variables.replaceIn(\"{{$randomEmail}}\"));",
							"pm.collectionVariables.set(\"user2_password\", pm.variables.replaceIn(\"{{$randomPassword}}\"));",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"{{user2_email}}\",\n    \"password\": \"{{user2_password}}\",\n    \"firstName\": \"{{$randomFirstName}}\",\n    \"lastName\": \"{{$randomLastName}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/v1/register",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v1",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login user 2 [/v1/login]",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"pm.test(\"Access token present\", function () {",
							"    pm.expect(jsonData.access_token).exist",
							"});",
							"pm.collectionVariables.set(\"user2_access_token\", jsonData.access_token);",
							"pm.collectionVariables.set(\"user2_refresh_token\", jsonData.refresh_token);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"{{user2_email}}\",\n    \"password\": \"{{user2_password}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/v1/login",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v1",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get user 2 profile [/v1/users/me]",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Email is the same\", ()=> {",
							"    pm.expect(jsonData.email).equal(pm.collectionVariables.get(\"user2_email\").toLowerCase());",
							"});",
							"pm.test(\"External ID is not null\", () => {",
							"    pm.expect(jsonData.externalId).exist.not.empty;",
							"})",
							"",
							"pm.test(\"Profile data is correct\", ()=> {",
							"    pm.expect(jsonData.username).not.equal(pm.collectionVariables.get(\"user1_username\"));",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{user2_access_token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{baseUrl}}/v1/users/me",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v1",
						"users",
						"me"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "arch.homework",
			"type": "string"
		},
		{
			"key": "user1_email",
			"value": ""
		},
		{
			"key": "user1_password",
			"value": ""
		},
		{
			"key": "user2_email",
			"value": ""
		},
		{
			"key": "user2_password",
			"value": ""
		},
		{
			"key": "user1_access_token",
			"value": ""
		},
		{
			"key": "user1_refresh_token",
			"value": ""
		},
		{
			"key": "user1_username",
			"value": ""
		},
		{
			"key": "user1_firstName",
			"value": ""
		},
		{
			"key": "user1_lastName",
			"value": ""
		},
		{
			"key": "user1_phone",
			"value": ""
		},
		{
			"key": "user1_description",
			"value": ""
		},
		{
			"key": "user2_access_token",
			"value": ""
		},
		{
			"key": "user2_refresh_token",
			"value": ""
		}
	]
}
